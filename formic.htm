<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="content-security-policy" content="
	base-uri 'self';
	default-src 'none';
	child-src blob:;
	frame-src blob:;
	connect-src https://api.stackexchange.com;
	script-src 'self' 'unsafe-inline' blob:;
	worker-src blob:;
	style-src 'self';
	img-src 'self';
	form-action 'none';
">
<!-- these properties are read by the engine to configure the game -->
<title>Formic Functions</title>
<link rel="icon" href="favicons/formic.png">
<meta name="stack-exchange-site" content="codegolf">
<meta name="stack-exchange-qid" content="135102">

<meta name="team-type" content="free_for_all">
<meta name="team-type-args" content='{}'>

<meta name="tournament-type" content="brawl">
<meta name="tournament-type-args" content='{}'>

<meta name="match-type" content="brawl">
<meta name="match-type-args" content='{
	"count": 50,
	"teamLimit": 16000,
	"teamShuffle": "random"
}'>

<meta name="game-type" content="formic">
<meta name="game-config" content='{
	"width": 2500,
	"height": 1000,
	"foodRatio": 0.001,
	"maxFrame": 30000,
	"skipFrame": 0
}'>
<meta name="play-config" content='{
	"delay": 0,
	"speed": 50
}'>
<meta name="play-screensaver-config" content='{
	"delay": 50,
	"speed": 25,
	"swapDelay": 5000
}'>
<meta name="display-config" content='{
	"scale": 0.5,
	"colourscheme": "saturated",
	"highlightRedrawRegions": false,
	"view3D": false,
	"queenMarkerType": "ring",
	"workerMarkerType": "",
	"nextMoverMarkerType": "",
	"foodMarkerType": "",
	"wireframe": false
}'>

<meta name="default-code" content="/*
 * Input:
 * view - array of 9 objects, each containing:
 * - color: integer [1-8]
 * - ant: null or {type: [1-5], food: [0+), friend: true/false}
 * - food: 0 or 1
 *
 * Return: object containing:
 * - cell: integer [0-8] denoting the cell to move to, or perform an action on
 * - type: type of worker ant to create on cell
 * - color: new cell colour to apply
 *
 * Element order: (but note that direction is randomised each turn)
 * 0 1 2
 * 3 4 5
 * 6 7 8
 */

return {cell: 4};
">

<script src="core/require.js"></script>
<script src="engine/entry.js" async></script>
<script>
  var shorcutFn = function (e) {
		var active = document.activeElement.tagName.toLowerCase();
		if (active === 'input' || active === 'textarea') return;
    let k = e.key;
    if (/[ `s0-9]/.test(k)) {
      let narr = ["Pause", "Play", "Play Fast", "Play Very Fast", "Play Crazy Fast", "Fastest Possible", "Play 1/8 Speed", "Play 1/4 Speed", "Play 1/2 Speed", "Step"]
      //             0        1         2               3                  4                 5                   6                 7                 8            9
      narr["`"] = "Step Frame";
      narr[" "] = "Pause";
      narr["s"] = "Skip to specified frame (potentially restarting the game if required)";
      document.querySelector(`[title="${narr[k]}"]`).click()
    }
  };
	document.addEventListener("keydown", shorcutFn);
	var ProgressReport;
	var progressReportGames = [];
	var tempB;
	var displayTeamList = [];
	for (let i = 0;i<100;i++) displayTeamList.push("E"+i);
	function updateShowing (id) {
		id = "E" + id.substring(1);
		if (displayTeamList.includes(id))
		  displayTeamList.splice(displayTeamList.indexOf(id), 1)
		else displayTeamList.push(id)
	}
</script>
</head>
<body>

<noscript>This viewer requires Javascript!</noscript>

</body>
</html>
